plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    alias(libs.plugins.kapt)
    id 'kotlin-parcelize'
}

android {
    namespace 'com.github.italord0.newsapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.github.italord0.newsapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        def localProperties = new Properties()
        def localPropertiesFile = rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            localPropertiesFile.withInputStream { stream ->
                localProperties.load(stream)
            }
        }

        def newsApiKey = localProperties.getProperty("api_key")

        buildConfigField "String", "BASE_URL", '"https://newsapi.org/v2/"'
        buildConfigField "String", "API_KEY", "\"${newsApiKey}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        buildConfig true
    }

    //flavors
    productFlavors {
        flavorDimensions += "version"
        create("bbc") {
            getIsDefault().set(true)
            dimension "version"
            buildConfigField "String", "NEWS_SOURCE", '"bbc-news"'
            applicationIdSuffix = ".bbc"
            versionNameSuffix = "-bbc"
        }
        create("abc") {
            dimension "version"
            buildConfigField "String", "NEWS_SOURCE", '"abc-news"'
            applicationIdSuffix = ".abc"
            versionNameSuffix = "-abc"
        }
        create("theVerge") {
            dimension "version"
            buildConfigField "String", "NEWS_SOURCE", '"the-verge"'
            applicationIdSuffix = ".theVerge"
            versionNameSuffix = "-theVerge"
        }
        create("wallStreetJournal") {
            dimension "version"
            buildConfigField "String", "NEWS_SOURCE", '"the-wall-street-journal"'
            applicationIdSuffix = ".wallStreetJournal"
            versionNameSuffix = "-wallStreetJournal"
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.navigation.compose
    implementation libs.compose.material
    implementation libs.moshi
    implementation libs.moshi.kotlin.codegen
    implementation libs.moshi.kotlin
    implementation libs.coil.compose
    implementation libs.koin.android
    implementation libs.koin.compose
    implementation libs.retrofit
    implementation libs.retrofitConverterMoshi
    implementation libs.okhttp
    implementation libs.okhttpLoggingInterceptor
    testImplementation libs.mockk
    testImplementation libs.coroutines.test
    testImplementation libs.junit
    testImplementation libs.core.testing
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}